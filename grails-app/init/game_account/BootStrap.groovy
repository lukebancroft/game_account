package game_account

import mbds.tp.game_account.Result
import mbds.tp.game_account.Message
import mbds.tp.game_account.Role
import mbds.tp.game_account.User
import mbds.tp.game_account.UserRole

import java.text.SimpleDateFormat

class BootStrap {

    def init = { servletContext ->
        def adminRole = new Role(authority: 'ROLE_ADMIN').save(flush: true, failOnError: true)
        def userRole = new Role(authority: 'ROLE_USER').save(flush: true, failOnError: true)

        def user1 = new User(username: 'admin', password: '123').save(flush: true, failOnError: true)
        def user2 = new User(username: 'player1', password: '123').save(flush: true, failOnError: true)
        def user3 = new User(username: 'player2', password: '123').save(flush: true, failOnError: true)
        def user4 = new User(username: 'luke', password: '123').save(flush: true, failOnError: true)
        def user5 = new User(username: 'fabien', password: '123').save(flush: true, failOnError: true)
        def user6 = new User(username: 'first', password: '123').save(flush: true, failOnError: true)
        def user7 = new User(username: 'last', password: '123').save(flush: true, failOnError: true)
        def user8 = new User(username: 'random', password: '123').save(flush: true, failOnError: true)
        def user9 = new User(username: 'anon', password: '123').save(flush: true, failOnError: true)
        def user10 = new User(username: 'super', password: '123').save(flush: true, failOnError: true)

        UserRole.create(user1, adminRole, true)
        UserRole.create(user2, userRole, true)
        UserRole.create(user3, userRole, true)
        UserRole.create(user4, userRole, true)
        UserRole.create(user5, userRole, true)
        UserRole.create(user6, userRole, true)
        UserRole.create(user7, userRole, true)
        UserRole.create(user8, userRole, true)
        UserRole.create(user9, userRole, true)
        UserRole.create(user10, adminRole, true)
        UserRole.create(user10, userRole, true)

        def res1 = new Result(winner: user1, loser: user2, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res2 = new Result(winner: user1, loser: user3, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res3 = new Result(winner: user1, loser: user4, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res4 = new Result(winner: user1, loser: user5, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res5 = new Result(winner: user1, loser: user6, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res6 = new Result(winner: user1, loser: user7, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res7 = new Result(winner: user1, loser: user8, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res8 = new Result(winner: user1, loser: user9, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res9 = new Result(winner: user1, loser: user10, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res10 = new Result(winner: user2, loser: user2, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res11 = new Result(winner: user2, loser: user3, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res12 = new Result(winner: user2, loser: user4, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res13 = new Result(winner: user2, loser: user5, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res14 = new Result(winner: user2, loser: user6, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res15 = new Result(winner: user2, loser: user7, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res16 = new Result(winner: user2, loser: user8, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res17 = new Result(winner: user2, loser: user9, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res18 = new Result(winner: user2, loser: user10, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res19 = new Result(winner: user3, loser: user2, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res20 = new Result(winner: user3, loser: user3, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res21 = new Result(winner: user3, loser: user4, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res22 = new Result(winner: user3, loser: user5, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res23 = new Result(winner: user3, loser: user6, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res24 = new Result(winner: user3, loser: user7, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res25 = new Result(winner: user3, loser: user8, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res26 = new Result(winner: user3, loser: user9, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res27 = new Result(winner: user3, loser: user10, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res28 = new Result(winner: user4, loser: user2, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res29 = new Result(winner: user4, loser: user3, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res30 = new Result(winner: user4, loser: user4, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res31 = new Result(winner: user4, loser: user5, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res32 = new Result(winner: user4, loser: user6, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res33 = new Result(winner: user4, loser: user7, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res34 = new Result(winner: user4, loser: user8, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res35 = new Result(winner: user4, loser: user9, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        def res36 = new Result(winner: user4, loser: user10, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user2, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user3, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user4, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user5, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user6, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user7, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user8, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user9, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)
        new Result(winner: user5, loser: user10, winnersScore: 10, losersScore: 1).save(flush: true, failOnError: true)

        res1.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-01-12"))
        res2.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-01-12"))
        res3.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res4.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res5.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res6.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res7.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res8.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-02-12"))
        res9.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-04-12"))
        res10.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-04-12"))
        res11.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-04-12"))
        res12.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-04-12"))
        res13.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res14.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res15.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res16.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res17.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res18.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-05-12"))
        res19.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-06-12"))
        res20.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-06-12"))
        res21.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res22.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res23.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res24.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res25.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res26.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res27.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-07-12"))
        res28.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-08-12"))
        res29.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-08-12"))
        res30.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-08-12"))
        res31.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-08-12"))
        res32.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-08-12"))
        res33.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-09-12"))
        res34.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-09-12"))
        res35.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-09-12"))
        res36.setDateCreated(new SimpleDateFormat("yyyy-MM-dd").parse("2018-09-12"))

        new Message(author: user1, target: user2, content: "Haha j'ai gagné mdr").save(flush: true, failOnError: true)
        new Message(author: user2, target: user1, content: "Mon père travaille à Microsoft tu vas te faire ban").save(flush: true, failOnError: true)

    }
    def destroy = {
    }
}
